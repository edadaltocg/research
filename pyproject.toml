[project]
name = "research"
version = "0.1.0"
description = "Ed's from-zero research monorepo. For AI learning purposes."
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
dependencies = [
  "datasets>=2.14.4",
  "safetensors",
  "einops>=0.8.0",
  "fire>=0.7.0",
  "lm-eval>=0.4.5",
  "matplotlib>=3.9.2",
  "omegaconf>=2.3.0",
  "psutil",
  "seaborn>=0.13.2",
  "setuptools>=75.6.0",
  "tiktoken>=0.8.0",
  "tokenizers>=0.20.1",
  "torch==2.5.1",
  "torchao>=0.5.0",
  "torchaudio>=2.4.1",
  "torchtune>=0.4.0",
  "torchvision>=0.19.1",
  "Pillow>=9.4.0",
  "torcheval",
]

[tool.setuptools]
py-modules = ["research"]

[project.optional-dependencies]
dev = ["ruff", "pytest", "pytest-cov", "pytest-xdist", "mypy"]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[dependency-groups]
docs = [
  "mkdocs-material>=9.5.47",
  "mkdocs>=1.6.0",
  "mkdocstrings>=0.27.0",
  "mkdocstrings-python>=1.12.2",
  "mkdocs-gen-files>=0.5.0",
  "mkdocs-section-index>=0.3.9",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 100
fix = true

[tool.ruff.lint]
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true
